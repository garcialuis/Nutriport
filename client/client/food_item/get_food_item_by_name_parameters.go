// Code generated by go-swagger; DO NOT EDIT.

package food_item

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewGetFoodItemByNameParams creates a new GetFoodItemByNameParams object
// with the default values initialized.
func NewGetFoodItemByNameParams() *GetFoodItemByNameParams {
	var ()
	return &GetFoodItemByNameParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetFoodItemByNameParamsWithTimeout creates a new GetFoodItemByNameParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetFoodItemByNameParamsWithTimeout(timeout time.Duration) *GetFoodItemByNameParams {
	var ()
	return &GetFoodItemByNameParams{

		timeout: timeout,
	}
}

// NewGetFoodItemByNameParamsWithContext creates a new GetFoodItemByNameParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetFoodItemByNameParamsWithContext(ctx context.Context) *GetFoodItemByNameParams {
	var ()
	return &GetFoodItemByNameParams{

		Context: ctx,
	}
}

// NewGetFoodItemByNameParamsWithHTTPClient creates a new GetFoodItemByNameParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetFoodItemByNameParamsWithHTTPClient(client *http.Client) *GetFoodItemByNameParams {
	var ()
	return &GetFoodItemByNameParams{
		HTTPClient: client,
	}
}

/*GetFoodItemByNameParams contains all the parameters to send to the API endpoint
for the get food item by name operation typically these are written to a http.Request
*/
type GetFoodItemByNameParams struct {

	/*FoodName
	  The name of a food item

	*/
	FoodName string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get food item by name params
func (o *GetFoodItemByNameParams) WithTimeout(timeout time.Duration) *GetFoodItemByNameParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get food item by name params
func (o *GetFoodItemByNameParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get food item by name params
func (o *GetFoodItemByNameParams) WithContext(ctx context.Context) *GetFoodItemByNameParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get food item by name params
func (o *GetFoodItemByNameParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get food item by name params
func (o *GetFoodItemByNameParams) WithHTTPClient(client *http.Client) *GetFoodItemByNameParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get food item by name params
func (o *GetFoodItemByNameParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithFoodName adds the foodName to the get food item by name params
func (o *GetFoodItemByNameParams) WithFoodName(foodName string) *GetFoodItemByNameParams {
	o.SetFoodName(foodName)
	return o
}

// SetFoodName adds the foodName to the get food item by name params
func (o *GetFoodItemByNameParams) SetFoodName(foodName string) {
	o.FoodName = foodName
}

// WriteToRequest writes these params to a swagger request
func (o *GetFoodItemByNameParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param foodName
	if err := r.SetPathParam("foodName", o.FoodName); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
